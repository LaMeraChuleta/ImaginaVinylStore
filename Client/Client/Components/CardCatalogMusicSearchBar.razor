@using Client.App.Interfaces
@using Blazored.LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage
@inject IHttpClientHelper HttpClientHelper;
@inject IToastService ToastService

<div class=" inline-flex mt-10">
    <img class="w-24 h-24" src="@(MusicCatalogs.Images!.FirstOrDefault()?.Url ?? "https://as1.ftcdn.net/v2/jpg/02/35/30/46/1000_F_235304686_Dabv7XmRksedIMrH4ADfMpN21K1nN67R.jpg")" alt="Imagen del disco">
    <div class="ml-5">
        <p>@MusicCatalogs.Title</p>
        <p>@MusicCatalogs.Artist!.Name</p>
        <p>Formato: @MusicCatalogs.Format!.Name</p>
        <button @onclick="AddItemShopCart" class="w-full rounded-lg py-2 bg-blue-600 text-white font-semibold uppercase hover:bg-blue-600">Agregar al carrito</button>
    </div>
</div>


@code
{
    [Parameter]
    public MusicCatalog MusicCatalogs { get; set; } = new();

    private async void AddItemShopCart()
    {
        try
        {
            var item = new ShopCart
            {
                MusicCatalogId = MusicCatalogs.Id,
                Amount = 1,
                UnitPrice = 300
            };

            var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            if (authenticationState.User.Identity is { IsAuthenticated: true })
            {
                var fullShopCart = await HttpClientHelper.Get<List<ShopCart>>(nameof(ShopCart));
                if (fullShopCart.Exists(x => x.MusicCatalogId == item.MusicCatalogId))
                {
                    ToastService.ShowWarning($"Ya existe este articulo en el carrito. {MusicCatalogs.Title}{MusicCatalogs.Artist?.Name}");
                }
                else
                {
                    await HttpClientHelper.Post(nameof(ShopCart), item);
                    ToastService.ShowSuccess($"Se guardo este articulo en el carrito. {MusicCatalogs.Title}{MusicCatalogs.Artist?.Name}");
                }
            }
            else
            {
                var shopCartItems = await LocalStorage.GetItemAsync<List<ShopCart>>(nameof(ShopCart)) ?? new();
                if (shopCartItems.Exists(x => x.MusicCatalogId == MusicCatalogs.Id))
                {
                    ToastService.ShowWarning($"Ya existe este articulo en el carrito. {MusicCatalogs.Title}{MusicCatalogs.Artist?.Name}");
                }
                else
                {
                    shopCartItems.Add(item);
                    await LocalStorage.SetItemAsync(nameof(ShopCart), shopCartItems);
                    ToastService.ShowSuccess($"Se guardo este articulo en el carrito. {MusicCatalogs.Title}{MusicCatalogs.Artist?.Name}");
                }
            }
        }
        catch (Exception exception)
        {
            ToastService.ShowToast(ToastLevel.Error, exception.Message);
        }
    }
}
@using Client.App.Interfaces
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject IShopCartService ShopCartsService

<div class="inline-flex mt-10">
    <img class="w-24 h-24" src="@(MusicCatalogs.Images!.FirstOrDefault()?.Url ?? "https://as1.ftcdn.net/v2/jpg/02/35/30/46/1000_F_235304686_Dabv7XmRksedIMrH4ADfMpN21K1nN67R.jpg")" alt="Imagen del disco">
    <div class="ml-5 text-sm w-58 bg-red-100">
        <p>@MusicCatalogs.Title-@MusicCatalogs.Artist!.Name</p>        
        <span class="@BgTypeFormat inline-block mb-2 font-sans px-2 py-1 leading-none text-white rounded-full uppercase text-xs">@MusicCatalogs.Format?.Name</span>
        <button @onclick="AddItemShopCart" class="w-full text-xs rounded-lg py-2 bg-blue-600 text-white font-semibold uppercase hover:bg-blue-600">Agregar al carrito</button>
    </div>
</div>


@code
{
    [Parameter]
    public MusicCatalog MusicCatalogs { get; set; } = new();

    private string BgTypeFormat { get; set; } = "bg-grey-400";

    protected override void OnParametersSet()
    {
        BgTypeFormat = MusicCatalogs.Format?.Name switch
        {
            "Vinyl" => "bg-red-400",
            "CD" => "bg-blue-400",
            "Cassette" => "bg-orange-400",
            _ => "bg-grey-400"
        };
    }

    private async void AddItemShopCart()
    {
        try
        {
            var item = new ShopCart
            {
                MusicCatalogId = MusicCatalogs.Id,
                Amount = 1,
                UnitPrice = 300
            };

            var isItemCreate = await ShopCartsService.SetShopCartItem(item, MusicCatalogs);
            if (isItemCreate)
            {
                ToastService.ShowSuccess($"Se guardo este articulo en el carrito. { MusicCatalogs.Title }-{ MusicCatalogs.Artist?.Name }");
            }
            else
            {
                ToastService.ShowWarning($"Ya existe este articulo en el carrito. { MusicCatalogs.Title }-{ MusicCatalogs.Artist?.Name }");
            }
        }
        catch (Exception exception)
        {
            ToastService.ShowToast(ToastLevel.Error, exception.Message);
        }
    }
}
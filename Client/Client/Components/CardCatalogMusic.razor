@using Client.App.Interfaces
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject IShopCartService ShopCartsService

<div @onclick="@(() => NavigationManager.NavigateTo($"CatalogMusicDetail/{MusicCatalog.Id}"))" class="rounded-lg bg-gray-300     text-gray-800 shadow-lg flex-col w-64">
    <img src="@(MusicCatalog.Images?.FirstOrDefault()?.Url ?? "https://udiscover.mx/cdn/shop/files/big-OR_SIGNEDVINYL-version2.png?v=1691079605")" class=" w-64 rounded-lg h-56 border object-cover object-center" alt="">
    <div class="p-2 text-sm pt-4 sm:h-28 font-bold">
        <span class="@BgTypeFormat inline-block mb-2 font-sans px-2 py-1 leading-none text-white rounded-full uppercase tracking-wide text-xs">@MusicCatalog.Format?.Name</span>
        <p>@MusicCatalog.Title - @MusicCatalog.Artist?.Name</p>
        <p>Genero: @MusicCatalog.Genre?.Name</p>
    </div>
    <div class="w-full justify-between px-3 inline-flex text-md sm:h-10 p-2">
        @if (MusicCatalog.Discount != null)
        {
            <p>$@(((int)(MusicCatalog.Price - (MusicCatalog.Price * (MusicCatalog.Discount / 100.0)))).ToString("#,##0.00")) MXN</p>
            <div class="relative">
                <div class="absolute w-auto -top-3 -right-2 bg-orange-400 text-white rounded-full w-4 h-4 flex items-center justify-center text-xs z-10">-@MusicCatalog.Discount %</div>
                <p class="text-xs my-auto text-gray-600 line-through">$@MusicCatalog.Price.ToString("#,##0.00") MXN</p>
            </div>
        }
        else
        {
            <p>$@MusicCatalog.Price.ToString("#,##0.00") MXN</p>
        }
    </div>
</div>

@code {

    [Parameter]
    public MusicCatalog MusicCatalog { get; set; } = new();
    private string BgTypeFormat { get; set; } = "bg-grey-400";

    protected override void OnParametersSet()
    {
        BgTypeFormat = MusicCatalog.Format?.Name switch
        {
            "Vinyl" => "bg-red-400",
            "CD" => "bg-blue-400",
            "Cassette" => "bg-orange-400",
            _ => "bg-grey-400"
        };
    }

    private async void AddItemShopCart()
    {
        try
        {
            var isItemCreate = await ShopCartsService.SetShopCartItem(MusicCatalog);            
            if (isItemCreate)
            {
                ToastService.ShowSuccess($"Se guardo este articulo en el carrito. {MusicCatalog.Title}-{MusicCatalog.Artist?.Name}");
            }
            else
            {
                ToastService.ShowWarning($"Ya existe este articulo en el carrito. {MusicCatalog.Title}-{MusicCatalog.Artist?.Name}");
            }
        }
        catch (Exception exception)
        {
            ToastService.ShowToast(ToastLevel.Error, exception.Message);
        }
    }
}
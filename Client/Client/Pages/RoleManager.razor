@page "/RoleManager"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http.Headers
@attribute [Authorize]
<PageTitle>Roles</PageTitle>

<div class="w-full px-10 inline-flex my-5">
    <div class="md:w-2/3 h-full">
        <div class="text-2xl text-center font-semibold my-2.5">
            <h1>Administrar roles</h1>
        </div>
        <ul>
            @foreach (var rol in Roles)
            {
                <li>@rol</li>
            }
        </ul>
    </div>
</div>

@code {

    [Inject]
    public HttpClient Http { get; set; }

    [Inject]
    public IHttpClientFactory HttpFactory { get; set; }

    [Inject]
    public IAccessTokenProvider TokenProvider { get; set; }

    private List<string> Roles { get; set; } = new();

    public RoleManager()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        var accessTokenResult = await TokenProvider.RequestAccessToken();
        var token = string.Empty;

        if (accessTokenResult.TryGetToken(out var accessToken))
        {
            token = accessToken.Value;
        }

        Http = HttpFactory.CreateClient("Client.ServerAPI");
    //Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        Roles = await Http.GetFromJsonAsync<List<string>>("Rol") ?? throw new InvalidOperationException();
        await base.OnInitializedAsync();
    }

}